<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" 
	"http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="questions">
	<!-- 묻고 답하기 게시글 리스트 조회 / 상세정보 답글 조회 -->
	<select id="getAllPosts" parameterClass="map" resultClass="com.community.dto.QnaDto">           
      select
			p.post_no 					as no,
			p.post_board_no 			as boardNo,
			p.post_title 				as title,
			p.post_writer_no 			as writerNo,
			p.post_content 				as content,
			p.post_important 			as important,
			p.post_read_count 			as readCount,
			p.post_suggestion_count 	as suggestionCount,
			p.post_comment_count 		as commentCount,
			p.post_deleted 				as deleted,
			p.post_created_date 		as createdDate,
			p.post_updated_date 		as updatedDate,
			p.post_deleted_date 		as deletedDate,
			p.post_original_no 			as originalNo,
            e.emp_no 					as empNo,
            e.emp_name 					as name
		from
            (select
                row_number() over (order by post_no desc) row_number,
                p.post_no,
                p.post_board_no,
                p.post_title,
                p.post_writer_no,
                p.post_content,
                p.post_important,
                p.post_read_count,
                p.post_suggestion_count,
                p.post_comment_count,
                p.post_deleted,
                p.post_created_date,
                p.post_updated_date,
                p.post_deleted_date,
                p.post_original_no,
                e.emp_no,
                e.emp_name
            from
                comm_posts p, comm_employees e
            where
	        	p.post_deleted = 'N'
	        <dynamic>
	        <isNotNull property="opt">
	        	<isEqual property="opt" compareValue="title">
	        	and p.post_title like '%' || #keyword# || '%'
	        	</isEqual>
	        	<isEqual property="opt" compareValue="content">
	        	and p.post_content like '%' || #keyword# || '%'
	        	</isEqual>
	        </isNotNull>
	        </dynamic>	
	        and 
	        	p.post_board_no = 106
	        and
                p.post_writer_no = e.emp_no) p, comm_employees e
        where
           row_number between #begin# and #end#
        and
        	p.post_writer_no = e.emp_no 
        order by 
           post_original_no desc, post_no asc       
	</select>
	
	<select id="getTotalRows" parameterClass="map" resultClass="int">
		select
			count(*)
		from
			comm_posts
		where
			post_deleted = 'N'
	  	and 
			post_board_no = 106	
			 <dynamic>
		        	<isNotNull property="opt">
		        		<isEqual property="opt" compareValue="title">
		        		AND POST_TITLE like '%' || #keyword# || '%'
		        		</isEqual>
		        		<isEqual property="opt" compareValue="content">
		        		AND POST_CONTENT like '%' || #keyword# || '%'
		        		</isEqual>
		        	</isNotNull>
		        </dynamic>	
	</select>
	
	<!-- 질문글 insert -->
	<insert id="insertPost" parameterClass="com.community.vo.Question">
		insert into comm_posts
			(post_no,
             post_board_no,
             post_title,
             post_writer_no,
             post_content,
             post_important,
             post_original_no)
		values
			(comm_posts_seq.nextval, #boardNo#, #title#, #writerNo#, #content#, #important#, comm_posts_seq.currval)		
	</insert>
	
	<!-- 답글 insert -->
	<insert id="insertPostAnswer" parameterClass="com.community.vo.Question">
		insert into comm_posts
			(post_no,
             post_board_no,
             post_title,
             post_writer_no,
             post_content,
             post_important,
             post_original_no)
		values
			(comm_posts_seq.nextval, #boardNo#, #title#, #writerNo#, #content#, #important#, #originalNo#)	
	</insert>
	
	<!-- postion_name을 추가한 Dto -->
	<select id="getPostByNo" parameterClass="int" resultClass="com.community.dto.QnaDto">
		select
			p.post_no 					as no,
			p.post_board_no 			as boardNo,
			p.post_title 				as title,
			p.post_writer_no 			as writerNo,
			p.post_content 				as content,
			p.post_important 			as important,
			p.post_read_count 			as readCount,
			p.post_suggestion_count 	as suggestionCount,
			p.post_comment_count 		as commentCount,
			p.post_deleted 				as deleted,
			p.post_created_date 		as createdDate,
			p.post_updated_date 		as updatedDate,
			p.post_deleted_date 		as deletedDate,
			p.post_original_no 			as originalNo,
            e.emp_no 					as empNo,
            e.emp_name 					as name,
            d.department_name			as departmentName,
            po.position_name 			as positionName
		from
			comm_posts p, comm_employees e, comm_departments d, comm_positions po
		where
			p.post_writer_no = e.emp_no
        and 
			e.emp_dept_no = d.department_no
        and
            po.position_no = e.emp_position_no
		and
			p.post_no = #value#
	</select>
	
	<!-- 게시글 번호 no와 일치하는 게시글 조회 - 상세정보 -->
	<select id="getNoPost" parameterClass="int" resultClass="com.community.vo.Question">
		select 
			post_no					as no,
			post_board_no 			as boardNo,
			post_title 				as title,
			post_writer_no 			as writerNo,
			post_content 			as content,
			post_important 			as important,
			post_read_count 		as readCount,
			post_suggestion_count 	as suggestionCount,
			post_comment_count 		as commentCount,
			post_deleted 			as deleted,
			post_created_date 		as createdDate,
			post_updated_date 		as updatedDate,
			post_deleted_date 		as deletedDate,
			post_original_no 		as originalNo
		from
			comm_posts
		where
			post_no = #value#
		
	</select>
	
	<!-- 상세정보 내 답변폼 -->
	<select id="detailAnswer" parameterClass="int" resultClass="com.community.dto.QnaDto">
		select
			p.post_no					as no,
			p.post_title 				as title,
			p.post_content 				as content,
			p.post_created_date 		as createdDate,
            e.emp_name 					as name,
            po.position_name 			as positionName
		from
			comm_posts p, comm_employees e, comm_positions po
		where
			p.post_writer_no = e.emp_no
        and
            po.position_no = e.emp_position_no
        and
        	p.post_deleted = 'N'
		and
			p.post_original_no = #value#
	</select>
	
	<update id="updatePost" parameterClass="com.community.vo.Question"> 
		update
    		comm_posts
		set
			post_board_no = #boardNo#,
			post_title 	= #title#,
			post_writer_no 	= #writerNo#,
			post_content = #content#,
			post_important 	= #important#,
			post_read_count = #readCount#,
			post_suggestion_count = #suggestionCount#,
			post_comment_count = #commentCount#,
		    post_deleted = #deleted#,
		    post_created_date = #createdDate#,
			post_updated_date = sysdate,
		    post_deleted_date = #deletedDate#,
		    post_original_no = #originalNo#
		where
		    post_no = #no#
	</update>
	
	<update id="deletedPost" parameterClass="com.community.vo.Question">
		update
    		comm_posts
		set
		    post_deleted = #deleted#,
		    post_deleted_date = sysdate
		where
		    post_no = #no#
	</update>
</sqlMap>

